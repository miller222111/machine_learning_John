load("~/Desktop/Reproducible_R/RepData_PeerAssessment1/.RData")
(1/sqrt(.3^2*(20)+.4^2*(80)))
(1/sqrt(.3^2+.4^2))
2*(.3*20+.4*(80))
q<-data.frame(c(-3,1,0),c(1,1,1))
q
a1<-c(-3,1,0)
a2<-c(-3,-13,4)
a3<-c(1,1,0)
a<-c(a1,a2,a3)
a
a<-data.frame(a1,a2,a3)
a
?inverse
?inv
solve(a)
b<-solve(a)
a*b
b*a
base<-c(40,138,150,148,135)
W2<-c(132,135,151,146,130)
?test
?t.test
t.test(base,W2,alternative="two.sided",paired=TRUE)
t.test(W2,base,alternative="two.sided",paired=TRUE)
t.test(W2,base,alternative="less",paired=TRUE)
t.test(W2,base,alternative="greater",paired=TRUE)
base<-c(40,138,150,148,135)
W2<-c(132,135,151,146,130)
t.test(W2,base,paired=TRUE)
t.test(W2,base,alt="less",paired=TRUE)
base<-c(140,138,150,148,135)
W2<-c(132,135,151,146,130)
t.test(W2,base,alt="less",paired=TRUE)
t.test(W2,base,paired=TRUE)
?power.t.test
power.t.test(n=9,sd=30,type="one.sample",alt="two.sided")$power
power.t.test(n=9,sd=30,type="one.sample",alt="two.sided",sig.level=0.05)$power
power.t.test(n=9,sd=30,delta=NULL,type="one.sample",alt="two.sided",sig.level=0.05)$power
power.t.test(n=9,sd=30,delta=NULL,type="one.sample",alt="two.sided",sig.level=0.05)
power.t.test(n=9,sd=30,delta=2,type="one.sample",alt="two.sided",sig.level=0.05)$power
?pnorm
pnorm(1100+z*(30/sqrt(9)),mean=0.05,sd=(30/sqrt(9)),lower.tail=FALSE)
z<-qnorm(1-0.05)
pnorm(1100+z*(30/sqrt(9)),mean=0.05,sd=(30/sqrt(9)),lower.tail=FALSE)
pnorm(1100+z*(30/sqrt(9)),mean=0.05,sd=(30/sqrt(9)),lower.tail=FALSE)
z
1100+16.45
1100-16.45
qnorm(1-0.025)
1100+1.96*10
1100-1.96*10
?power.t.test
power.t.test(n=4,sd=4,delta=3,type="one.sample",alt="one.sided",sig.level=0.05)$power
power.t.test(n=4,sd=4,delta=3,type="one.sample",alt="one.sided")$power
t.test(10/1787,1/100,alternative="less")
10/1787
power.t.test(power=.90,sd=0.04,delta=0,type="one.sample",alt="one.sided")$n
power.t.test(power=.90,sd=0.08,delta=0.04,type="one.sample",alt="one.sided")$n
power.t.test(power=.90,sd=0.08,delta=0.01,type="one.sample",alt="one.sided")$n
power.t.test(power=.90,sd=0.04,delta=0.01,type="one.sample",alt="one.sided")$n
power.t.test(n=100,sd=0.04,delta=0.01,type="one.sample",alt="one.sided")$power
power.t.test(n=100,sd=0.04,delta=0.01,type="one.sample",alt="one.sided",sig.level=.05)$power
A_len=9;B_len=9; S_pool=((A_len-1)*(1.5)^2+(B_len-1)*(1.8)^2)/(A_len+B_len-2)
S_pool
T_stat=(-3-1)/(sqrt(S_pool*((1/A_len)+(1/B_len))));T_stat
df=(((1.5)^2/9)+((1.8)^2/9))^2
df
denom=(((1.5)^2/9)^2+((1.8)^2/9)^2)^2
num/denom
num=(((1.5)^2/9)+((1.8)^2/9))^2
num/denom
((1.5)^2/9)
1/100
10/1787
?ppois
ppois(10,17.87)
setwd("~/")
.5*(4-9)^(-1/2)
sqrt(3)
plot(sqrt(4-x^2))
x=c(-2,0,1)
plot(sqrt(4-x^2))
X=sqrt(4-x^2)
X
X=sqrt(4-x^2)*(-2x)
X=sqrt(4-x^2)*(-2*x)
X
x=c(-2,0,1)
X=sqrt(4-x^2)*(-2*x)
X
x<-(-.5)
f=4*x^3-12*x^2+8*x
f
x<-(.5)
f=4*x^3-12*x^2+8*x
f
x<-(1.5)
f=4*x^3-12*x^2+8*x
f
x<-(2.5)
f=4*x^3-12*x^2+8*x
f
x<-(-0.5)
f=x^4-4*x^3+4*x^2
fp=4*x^3-12*x^2+8*x
f
fp
x<-(0.5)
f=x^4-4*x^3+4*x^2
fp=4*x^3-12*x^2+8*x
f
fp
x<-(1)
f=x^4-4*x^3+4*x^2
fp=4*x^3-12*x^2+8*x
f
fp
x<-(1.5)
f=x^4-4*x^3+4*x^2
fp=4*x^3-12*x^2+8*x
f
fp
x<-(2)
f=x^4-4*x^3+4*x^2
fp=4*x^3-12*x^2+8*x
f
fp
x<-(2.5)
f=x^4-4*x^3+4*x^2
fp=4*x^3-12*x^2+8*x
f
fp
x<-(-3)
f=x^2*(x-1)/(x+2)
fp=3/(x+2)^2
f
fp
x<-(-2)
f=x^2*(x-1)/(x+2)
fp=3/(x+2)^2
f
fp
x<-(-1)
f=x^2*(x-1)/(x+2)
fp=3/(x+2)^2
f
fp
x<-(1)
f=x^2*(x-1)/(x+2)
fp=3/(x+2)^2
f
fp
x<-(0)
f=x^2*(x-1)/(x+2)
fp=3/(x+2)^2
f
fp
install.packages("DESeq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)
library(DESeq2)
hatvalues(Model)
c(2,3)/2
c(2,3)*3/2
summary(Model)
source('~/.active-rstudio-document', echo=TRUE)
summary(Model)
abline(h=c(5,6)*3/length(dat$mpg)
?identify
plot(hatvalues(Model))
abline(h=c(5,6)*3/length(dat$mpg))
identify(1:length(dat$mpg),hatvalues(Model),row.names(dat))
?row.names
plot(hatvalues(Model))
abline(h=c(5,6)*3/length(dat$mpg))
identify(1:length(dat$mpg),hatvalues(Model),colnames(dat))
hatvalues(Model)
mean(hatvalues(Model))
median(hatvalues(Model))
?hatvalues
plot(hatvalues(Model),type="h")
abline(h=c(5,6)*3/length(dat$mpg))
hatvalues(Model)
dim(dat)
dim(hatvalues(Model))
length(hatvalues(Model))
#Average hat values:
plot(hatvalues(Model))
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hatvalues(Model))
hatvalues(Model)
#Average hat values:
plot(hatvalues(Model))
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hatvalues(Model),labels=colnames(hatvalues(Model)))
hatvalues(Model)
?text
colnames(hatvalues(Model))
hatvalues(Model)$names
hatvalues(Model)[1]
hatvalues(Model)[1,1]
hatvalues(Model)[2]
?hatvalues
str(hatvalues(Model))
hatvalues(Model)$names
hatvalues(Model)["names"]
hv<-hatvalues(Model)
str(hv)
hv$names
names(hv)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv))
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.7,offset=10)
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.4,offset=10)
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,offset=12)
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,offset=20)
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,offset=0)
hatvalues(Model)
?text
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,adj=[1,2])
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,adj=[0,1])
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,adj=[0,1],offset=0.5)
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.6,pos=1,offset=0.5)
hatvalues(Model)
#Average hat values:
hv<-hatvalues(Model);plot(hv)
#plot average hat values line:
abline(h=c(5,6)*3/length(dat$mpg))
text(hv,labels=names(hv),cex=0.5,pos=1,offset=0.5)
hatvalues(Model)
mean(hv)
mean(hv)*3
h=c(5,6)*3/length(dat$mpg)
h
?abline
setwd("~/Desktop/Coursera__Data__Science/Machine_learning/Final_proj")
library(caret);library(ggplot2);library(MASS);library(rattle)
dat<-read.csv("training.csv")
